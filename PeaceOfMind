



Sat, Nov 18, 4:19pm
    Super frustrated, Been working on Calling an API for 3 hours and I have not got it to work. I know i could be using Javascript that will be a lot easier but I want to use JAva which is a pain for me because I have not used it before. I am not sure why i am writing this not, honestly its just to get the github stupid counter, because if i didn't do this it would look like i didn't work and I would like to have something positive. I am going to be continuing to work on this but for now I am stepping away. I thought I was onto something but It did not work like that.


Mon, Nov 27, 12:00pm
    - I guess I am just going to leave these notes as just personal notes through my journey. I am not sure where this is going to lead to but here it goes.
    - Today's goal:
        - Fix the duplicate genres that are in the welcome page. (BOOM FIXED)
        - I need to implement the api so i can start moving on, If i can not find out how to do it with java then i am just gonna use hava script. I am frustrated on that but my question is now it is typical to just use javascript. does anyone use Java to call a api?

    - Notes:
        - I think i  found the solution thanks to rapidApi (https://rapidapi.com/guides/make-api-call-java). Read it .



Tues, Nov 28, 09:00am
    - Took me most of the day to figure out how to not change the URL when i submit for a book  result.
    - I did add a loader so when the book is searching I can have a custom spinner to show it is doing something and the user just dont think we froze.
    - I will have to go back and look over the code again to make sure I fully understand but I think that is later on.

Wed, Nov 29, 11:00am
    - Working on the style of the search bar results
    - Adding a button to allow users to save the books requested to our database and to view on single book page.
    - Need to create single book layout

Thurs, Nov 30, 10:27am
    - Today im working on trying to get reviews over the books
    - will need a databases for reviews
    - connect review to all books and users with one to many and many to ones
    - Made the single book page mobile and all reviews will be shown


Saturday, Dec 2, 10:30am
    - Need to create a profile page for all users.
    *- Need to decide if I want a search book page or if I want a search bar on the navigation on every page.


Thursday, Dec 7 13:13
    TODO:
        [ ] Nav, Change Direction on both to correct URL pathway
        [ ] On Homepage, Change pathway of "Get Started" button to the correct URL pathway.
        [ ] On Homepage, Change the design the buttons to match the following.
        [ ] On Homepage, make those books clickable even thought they are only gonna be able to go to the login page, until logged in.
        [ ] ON registration page, The warning sign is popping up and I need it to only show up if there is an error.
        [ ] On Login page, Change the form to username instead of email.
        [ ] On Login page, Change the direction to need a new account url path.
        [ ] On Login page, Figure out how I am going to do the forgot password
        * [ ] On Login page, Create the functionality to work when a user successfully logs in.
        [ ] On Single Book Page, Fix the rating stars.
        [ ] On Database, Correct the Reviews to the correct user.
        * [ ] Create a database that will collect the users favorite books.
        [ ] On profile page, showcase all favorite books.
        [ ] On profile page, make all book clickable to correct URL
        [ ] On profile page, Make Setting button functional to show edit form.
        [ ] On profile page, Make edit review function to show edit review form.
        * [ ] on profile page, Make it visible only a user can see add friend button, not on their own profile.
        [ ] on profile page, if user are already friend, button should be changed.
        [ ] Create a search for book page that will include search by genre, title, through our database, then through the api
        [ ] If we don't have book in our database, they will be able to click on book and then pull info about the book from api and save it to our database.